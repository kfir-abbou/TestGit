syntax = "proto3";
package proto;

service ScoreManagerService
{
	rpc AddPlayer(AddPlayerRequestMsg) returns (ReplyMsg);
	rpc GetPlayers(GetPlayerRequestMsg) returns (GetPlayersReplyMsg);
	rpc StartNewMatch(StartMatchRequestMsg) returns (ReplyMsg);
	rpc UpdateGameResult (UpdateGameRequestMsg) returns (ReplyMsg);
	//rpc GetCurrentScore (GetGameDataRequestMsg) returns (ScoreReplyMsg);
	rpc GetScoreBoardStatus (ScoreBoardStatusRequestMsg) returns (ScoreBoardStatusReplyMsg);
}

enum REPLY_MSG_RESULT
{
	SUCCEED = 0;
	FAILED_TIME_OUT = 1;
	FAILED_ON_ERROR = 2;
}

enum PLAYER
{
	PLAYER1 = 0;
	PLAYER2 = 1;
}
message GetPlayerRequestMsg
{
	
}

message GetPlayersReplyMsg
{
	ReplyMsg reply = 1;
	repeated AddPlayerRequestMsg playersData = 2;
}

message AddPlayerRequestMsg
{
	int32 id =1;
	string first = 2;
	string last = 3; 
}

message StartMatchRequestMsg
{
	int32 player1Id = 1;
	int32 player2Id = 2;
}

message ReplyMsg
{
	REPLY_MSG_RESULT result = 1;
	string ErrorMsg = 2;
	int32 gameID = 3;
}

message UpdateGameRequestMsg
{
	PLAYER playerScored = 1;
	int32 gameID = 2;
}

//message GetGameDataRequestMsg
//{
//	int32 MatchId = 1;
//}

message ScoreBoardStatusRequestMsg
{
	int32 MatchId = 1;
}

message gameStatus
{
	int32 gameID =1;
	int32 player1Id = 2;
	int32 totalScoresP1 = 3;
	int32 player2Id = 4;
	int32 totalScoresP2 = 5;
}

message ScoreBoardStatusReplyMsg
{
	REPLY_MSG_RESULT result = 1;
	repeated gameStatus gameStatus = 2;
}

message ScoreReplyMsg
{
	int32 gameID = 1;
	string p1Name = 2;
	string p2Name = 3;
	string player1Score = 4;
	string player2Score = 5;
	string gameStatus = 6;
}
